{
  "comments": [
    {
      "key": {
        "uuid": "c8761c7f_a3c6eeaa",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 12,
      "author": {
        "id": 1000016
      },
      "writtenOn": "2020-11-20T02:37:17Z",
      "side": 1,
      "message": "Could you elaborate on why this (rendering all packets at once) is better though?\n\nIt looks like the main part of this change is that we can perform the route lookup once, during the initial message queue, rather than on each TX.\n\nHowever, that means we may be using stale physical addressing data on TX, are you OK with that? Not that it matters for either of the in-tree bindings, but we\u0027ll hit this later.\n\nIt might be worthwhile putting a comment on the binding-\u003etx() function that the packet is required to be framed.",
      "revId": "7a34a6df89d1da3b94ada438b0074d4854bf0e1a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8eb8537e_7a01936b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 12,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2020-12-10T00:53:39Z",
      "side": 1,
      "message": "So backing up, I think I was trying to make the provisional EIDs work without carving them out into a separate address space like the current provisional EID patch does. Framing the packets all at once was a way to ensure that we didn\u0027t hit issues with that EID being reassigned (transitioning from locally provisional to formally assigned in the global sense) in between queuing the packets and having them hit the wire.\n\nThere was one race condition that I couldn\u0027t eliminate that drove me to separate out the provisional EIDs into a separate address space.\n\nWith that, I think the motivation for the framing patches disappears. Let me double check all the reasoning.",
      "parentUuid": "c8761c7f_a3c6eeaa",
      "revId": "7a34a6df89d1da3b94ada438b0074d4854bf0e1a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}