{
  "comments": [
    {
      "key": {
        "uuid": "b888e4ec_41daff96",
        "filename": "core.c",
        "patchSetId": 6
      },
      "lineNbr": 51,
      "author": {
        "id": 1000016
      },
      "writtenOn": "2020-07-06T07:12:46Z",
      "side": 1,
      "message": "Can we use a generic list type here? or even ccan/list.h?\n\nThis would mean you don\u0027t need to reimplement list traversal/manipulation over again.",
      "revId": "8270e936a5484e77d817e6459bec3de530a54659",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "36482bc9_fa32e372",
        "filename": "core.c",
        "patchSetId": 6
      },
      "lineNbr": 51,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2020-07-07T05:50:48Z",
      "side": 1,
      "message": "Yeah, I definitely had ccan/list.h on my mind, but I figured I\u0027d explore exactly what we needed with a bespoke implementation.\n\nHaving read the patch(es), you think we should switch?",
      "parentUuid": "b888e4ec_41daff96",
      "revId": "8270e936a5484e77d817e6459bec3de530a54659",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5fd42560_0e4f430d",
        "filename": "core.c",
        "patchSetId": 6
      },
      "lineNbr": 51,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2020-11-09T01:44:12Z",
      "side": 1,
      "message": "Leaving it as-is for the moment. Happy to rework it after I have this series submitted if there are strong feelings about it.",
      "parentUuid": "36482bc9_fa32e372",
      "revId": "8270e936a5484e77d817e6459bec3de530a54659",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "18cee7da_fdb269b4",
        "filename": "core.c",
        "patchSetId": 6
      },
      "lineNbr": 357,
      "author": {
        "id": 1000016
      },
      "writtenOn": "2020-07-06T07:12:46Z",
      "side": 1,
      "message": "If I could put memes in gerrit comments, one would go here ðŸ˜€",
      "revId": "8270e936a5484e77d817e6459bec3de530a54659",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2b03f1b2_f2f1034c",
        "filename": "core.c",
        "patchSetId": 6
      },
      "lineNbr": 357,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2020-07-07T05:50:48Z",
      "side": 1,
      "message": "Haha, well there\u0027s no locking elsewhere in libmctp currently, so if you\u0027re using it multi-threaded you\u0027re (probably) already broken. Maybe we shouldn\u0027t make it worse, but that\u0027s not something I wanted to worry about in this series. At least there\u0027s note :P\n\nDo you think I should do something different?",
      "parentUuid": "18cee7da_fdb269b4",
      "revId": "8270e936a5484e77d817e6459bec3de530a54659",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a8d8fca9_de438229",
        "filename": "core.c",
        "patchSetId": 6
      },
      "lineNbr": 357,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2020-11-09T01:44:12Z",
      "side": 1,
      "message": "Obviously this needs some more thought about the wider context. Hopefully it doesn\u0027t come back to bite me in subtle ways, but I think it\u0027s okay for the moment.",
      "parentUuid": "2b03f1b2_f2f1034c",
      "revId": "8270e936a5484e77d817e6459bec3de530a54659",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1dee2fbe_d42e596f",
        "filename": "core.c",
        "patchSetId": 6
      },
      "lineNbr": 535,
      "author": {
        "id": 1000461
      },
      "writtenOn": "2020-07-13T22:09:56Z",
      "side": 1,
      "message": "Since it is the exported function, isn\u0027t it better to return error to client?\nWe should probably avoid letting users trigger asserts inside library, in other words, asserts should be something internal for libmctp.",
      "range": {
        "startLine": 534,
        "startChar": 1,
        "endLine": 535,
        "endChar": 49
      },
      "revId": "8270e936a5484e77d817e6459bec3de530a54659",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d5b8c13a_c277054c",
        "filename": "core.c",
        "patchSetId": 6
      },
      "lineNbr": 535,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2020-10-28T11:54:57Z",
      "side": 1,
      "message": "Yep.",
      "parentUuid": "1dee2fbe_d42e596f",
      "range": {
        "startLine": 534,
        "startChar": 1,
        "endLine": 535,
        "endChar": 49
      },
      "revId": "8270e936a5484e77d817e6459bec3de530a54659",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ebfbbc41_acd0a3b4",
        "filename": "core.c",
        "patchSetId": 6
      },
      "lineNbr": 535,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2020-11-09T01:44:12Z",
      "side": 1,
      "message": "Actually, this is really similar to an up-cast operation. Returning an error complicates the interface (we\u0027d need to introduce an out-parameter pointer). I think it might be better to leave the asserts, document the pre-conditions that must be met, and implement a mctp_route_is_local() implementation that callers can use to check they\u0027ve satisfied the conditions before invoking mctp_route_as_eid().",
      "parentUuid": "d5b8c13a_c277054c",
      "range": {
        "startLine": 534,
        "startChar": 1,
        "endLine": 535,
        "endChar": 49
      },
      "revId": "8270e936a5484e77d817e6459bec3de530a54659",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ab97ff91_a2c85d94",
        "filename": "core.c",
        "patchSetId": 6
      },
      "lineNbr": 568,
      "author": {
        "id": 1000461
      },
      "writtenOn": "2020-07-13T22:09:56Z",
      "side": 1,
      "message": "Same here.",
      "range": {
        "startLine": 568,
        "startChar": 1,
        "endLine": 568,
        "endChar": 14
      },
      "revId": "8270e936a5484e77d817e6459bec3de530a54659",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "025145bb_d02cb4e6",
        "filename": "core.c",
        "patchSetId": 6
      },
      "lineNbr": 568,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2020-10-28T11:54:57Z",
      "side": 1,
      "message": "Yep.",
      "parentUuid": "ab97ff91_a2c85d94",
      "range": {
        "startLine": 568,
        "startChar": 1,
        "endLine": 568,
        "endChar": 14
      },
      "revId": "8270e936a5484e77d817e6459bec3de530a54659",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "70b498c6_ae00b8a9",
        "filename": "core.c",
        "patchSetId": 6
      },
      "lineNbr": 568,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2020-11-09T01:44:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "025145bb_d02cb4e6",
      "range": {
        "startLine": 568,
        "startChar": 1,
        "endLine": 568,
        "endChar": 14
      },
      "revId": "8270e936a5484e77d817e6459bec3de530a54659",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c643ecd1_4912b4f2",
        "filename": "core.c",
        "patchSetId": 6
      },
      "lineNbr": 586,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2020-10-28T11:54:57Z",
      "side": 1,
      "message": "Fix these too.",
      "range": {
        "startLine": 584,
        "startChar": 1,
        "endLine": 586,
        "endChar": 15
      },
      "revId": "8270e936a5484e77d817e6459bec3de530a54659",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d33aaae_e06e667f",
        "filename": "core.c",
        "patchSetId": 6
      },
      "lineNbr": 586,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2020-11-09T01:44:12Z",
      "side": 1,
      "message": "Actually, this is an internal function, so the asserts are fine. I\u0027ve added guards to the public functions.",
      "parentUuid": "c643ecd1_4912b4f2",
      "range": {
        "startLine": 584,
        "startChar": 1,
        "endLine": 586,
        "endChar": 15
      },
      "revId": "8270e936a5484e77d817e6459bec3de530a54659",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aecec76f_05b74042",
        "filename": "libmctp.h",
        "patchSetId": 6
      },
      "lineNbr": 114,
      "author": {
        "id": 1000016
      },
      "writtenOn": "2020-07-06T07:12:46Z",
      "side": 1,
      "message": "It\u0027s not super clear on which entity is responsible for manipulating the routing table. For example, should a caller be at the \"application layer\" of a MCTP stack? (in which case, doing routing table manipulation would appear odd). Can you either expand on this section of the API, or provide an example or two in a separate doc?",
      "revId": "8270e936a5484e77d817e6459bec3de530a54659",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ce425d2_6c4fbb0d",
        "filename": "libmctp.h",
        "patchSetId": 6
      },
      "lineNbr": 114,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2020-07-07T05:50:48Z",
      "side": 1,
      "message": "Right, so the answer is two entities:\n\n1. The application where the application is the entity setting up the network - we need to add routes as the network is initialised and then both add and remove routes as dynamic devices come and go.\n2. Bindings: when certain packets are received or packets are received from certain addresses, bindings need to manipulate the route table. This actually ends up taking place in core.c with the binding providing the physical address information for the packet to the core in the form of the `struct mctp_device` that you\u0027re querying below.",
      "parentUuid": "aecec76f_05b74042",
      "revId": "8270e936a5484e77d817e6459bec3de530a54659",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9b514d07_429b269e",
        "filename": "libmctp.h",
        "patchSetId": 6
      },
      "lineNbr": 114,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2020-11-09T01:44:12Z",
      "side": 1,
      "message": "I intend to do a documentation series for the public API and write something up about the theory of operation. I\u0027ll include the responsibility details in that if I don\u0027t end up introducing them beforehand.",
      "parentUuid": "2ce425d2_6c4fbb0d",
      "revId": "8270e936a5484e77d817e6459bec3de530a54659",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "274b7581_b7cf2a89",
        "filename": "libmctp.h",
        "patchSetId": 6
      },
      "lineNbr": 115,
      "author": {
        "id": 1000016
      },
      "writtenOn": "2020-07-06T07:12:46Z",
      "side": 1,
      "message": "What does this represent?",
      "revId": "8270e936a5484e77d817e6459bec3de530a54659",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b3264b87_1b1218bf",
        "filename": "libmctp.h",
        "patchSetId": 6
      },
      "lineNbr": 115,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2020-07-07T05:50:48Z",
      "side": 1,
      "message": "The physical address of a device on a local bus. In the case of a bridge there will be more than one bus, so we need the bus index represented as well. This information is stored in the route table and is also passed between bindings and the core (mctp_bus_rx) for each packet received. In the case of NULL EIDs, it\u0027s the struct mctp_device associated with the packet that allows us to determine the appropriate provisional route.",
      "parentUuid": "274b7581_b7cf2a89",
      "revId": "8270e936a5484e77d817e6459bec3de530a54659",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6ca71eb5_da328e2d",
        "filename": "libmctp.h",
        "patchSetId": 6
      },
      "lineNbr": 115,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2020-11-09T01:44:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b3264b87_1b1218bf",
      "revId": "8270e936a5484e77d817e6459bec3de530a54659",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f782eae2_ea868245",
        "filename": "libmctp.h",
        "patchSetId": 6
      },
      "lineNbr": 127,
      "author": {
        "id": 1000168
      },
      "writtenOn": "2020-07-15T09:26:06Z",
      "side": 1,
      "message": "Need to understand this particular type ? and when it will be used ?\nOther route types are as per the spec",
      "range": {
        "startLine": 127,
        "startChar": 8,
        "endLine": 127,
        "endChar": 36
      },
      "revId": "8270e936a5484e77d817e6459bec3de530a54659",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ee298be8_e7d10f88",
        "filename": "libmctp.h",
        "patchSetId": 6
      },
      "lineNbr": 127,
      "author": {
        "id": 1000168
      },
      "writtenOn": "2020-07-27T03:51:25Z",
      "side": 1,
      "message": "Discussed the same in WG, and thanks for the clairifcation, that this will be used for internal EID management.",
      "parentUuid": "f782eae2_ea868245",
      "range": {
        "startLine": 127,
        "startChar": 8,
        "endLine": 127,
        "endChar": 36
      },
      "revId": "8270e936a5484e77d817e6459bec3de530a54659",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1e115407_6e3c5e6f",
        "filename": "libmctp.h",
        "patchSetId": 6
      },
      "lineNbr": 127,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2020-11-09T01:44:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ee298be8_e7d10f88",
      "range": {
        "startLine": 127,
        "startChar": 8,
        "endLine": 127,
        "endChar": 36
      },
      "revId": "8270e936a5484e77d817e6459bec3de530a54659",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8b540741_803a58f0",
        "filename": "libmctp.h",
        "patchSetId": 6
      },
      "lineNbr": 131,
      "author": {
        "id": 1000016
      },
      "writtenOn": "2020-07-06T07:12:46Z",
      "side": 1,
      "message": "These could do with some explanation of the values (what\u0027s upstream \u0026 downstream?), which might work better as an enum.",
      "revId": "8270e936a5484e77d817e6459bec3de530a54659",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "864ee592_ad5dc75e",
        "filename": "libmctp.h",
        "patchSetId": 6
      },
      "lineNbr": 131,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2020-07-07T05:50:48Z",
      "side": 1,
      "message": "Yes, I should put a comment in here as Richard and Iwona were discussing it on previous revisions of the patch. It\u0027s mostly covered by DSP0236 v1.3.1 9.1.6. The type MCTP_ROUTE_TYPE_ENDPOINT refers to a locally owned EID. We need MCTP_ROUTE_TYPE_LOCAL to correctly reply to `Resolve Endpoint ID` queries (i.e. have the source device send packets directly to the destination device rather than force the bridge to route all packets for each device on the bus).\n\nAs for enum, I agree, but they have an ambiguous type size. For public interfaces I think we should use well-defined type sizes to make it easier to interface with the APIs (it makes it more obvious when you break the ABI).",
      "parentUuid": "8b540741_803a58f0",
      "revId": "8270e936a5484e77d817e6459bec3de530a54659",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1f85b32c_c97cda50",
        "filename": "libmctp.h",
        "patchSetId": 6
      },
      "lineNbr": 131,
      "author": {
        "id": 1000168
      },
      "writtenOn": "2020-07-15T09:26:06Z",
      "side": 1,
      "message": "what about other routing entry details, esp. EntryType related, dynamic / static Entry. \nFine if this is going to covered in separate patchsets",
      "range": {
        "startLine": 131,
        "startChar": 8,
        "endLine": 131,
        "endChar": 14
      },
      "revId": "8270e936a5484e77d817e6459bec3de530a54659",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2de7a880_0bcf6b94",
        "filename": "libmctp.h",
        "patchSetId": 6
      },
      "lineNbr": 131,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2020-11-09T01:44:12Z",
      "side": 1,
      "message": "I\u0027ve added a lengthy comment explaining the types and where to look in the base spec for further details.",
      "parentUuid": "864ee592_ad5dc75e",
      "revId": "8270e936a5484e77d817e6459bec3de530a54659",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "195db166_6e8bd6fb",
        "filename": "libmctp.h",
        "patchSetId": 6
      },
      "lineNbr": 131,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2020-11-09T01:44:12Z",
      "side": 1,
      "message": "We might need to rework that when implementing Routing Information Update support. I\u0027d prefer it to leave it to then when the motivation will give us a better grasp of possible implementations in the context of the requirements.",
      "parentUuid": "1f85b32c_c97cda50",
      "range": {
        "startLine": 131,
        "startChar": 8,
        "endLine": 131,
        "endChar": 14
      },
      "revId": "8270e936a5484e77d817e6459bec3de530a54659",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dccd0b21_b60b3a37",
        "filename": "libmctp.h",
        "patchSetId": 6
      },
      "lineNbr": 139,
      "author": {
        "id": 1000168
      },
      "writtenOn": "2020-07-15T09:26:06Z",
      "side": 1,
      "message": "Also, are we planning to introduce API to get the Routing table entry based on the bus lookup. \nThis is needed as we may need to send / cleanup routing table accordingly.",
      "revId": "8270e936a5484e77d817e6459bec3de530a54659",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8c93ce0c_146b501b",
        "filename": "libmctp.h",
        "patchSetId": 6
      },
      "lineNbr": 139,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2020-10-28T11:54:57Z",
      "side": 1,
      "message": "Hmm, I\u0027ll think about that.",
      "parentUuid": "dccd0b21_b60b3a37",
      "revId": "8270e936a5484e77d817e6459bec3de530a54659",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "40604c09_b0deda11",
        "filename": "libmctp.h",
        "patchSetId": 6
      },
      "lineNbr": 139,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2020-11-09T01:44:12Z",
      "side": 1,
      "message": "I think we can leave this until after we get this series submitted? It seems like a fairly well-defined concept that shouldn\u0027t result in an API incompatibility down the track.",
      "parentUuid": "8c93ce0c_146b501b",
      "revId": "8270e936a5484e77d817e6459bec3de530a54659",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    }
  ]
}