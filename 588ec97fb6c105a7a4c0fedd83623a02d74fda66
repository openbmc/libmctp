{
  "comments": [
    {
      "key": {
        "uuid": "690f5974_b36a06fe",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1000461
      },
      "writtenOn": "2020-03-24T08:26:22Z",
      "side": 1,
      "message": "Shouldn\u0027t it be hardware dependent? I believe this implementation will dependent on HW interface of MCTP Controller on PCIe. If that\u0027s the case you should rename files, structures and mention that in the commit message. Please, see astlpc for reference.",
      "revId": "588ec97fb6c105a7a4c0fedd83623a02d74fda66",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d5cfe53a_ac6bd4b2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1000460
      },
      "writtenOn": "2020-03-24T08:35:43Z",
      "side": 1,
      "message": "ast2600pcie for example? Quite long IMO. It there a plan to support various ast HW versions? Leaving astpcie will suggest so.",
      "parentUuid": "690f5974_b36a06fe",
      "revId": "588ec97fb6c105a7a4c0fedd83623a02d74fda66",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "edd68db7_4d57f2f9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2020-03-25T06:11:58Z",
      "side": 1,
      "message": "It\u0027s not clear to me yet where the boundaries for this implementation lie. I assume there\u0027s going to be an associated kernel driver that exposes an interface that the binding implementation backs onto. This is how the astlpc binding works for the most part (though it has the ability to be used in standalone environments also). What we need is for that kernel interface to have well-defined semantics that are portable across hardware implementations. As such the implementation here should just concern itself with the PCIe VDM binding semantics and not the nuances of the hardware and as a consequence I don\u0027t think the bare \u0027pcie\u0027 name is a bad start.\n\nHowever, I need more details on how this is actually going to work in practice. I\u0027d hate to see it using `/dev/mem` or the like to gain access to the PCIe MCTP device on the ASPEED SoCs.",
      "parentUuid": "d5cfe53a_ac6bd4b2",
      "revId": "588ec97fb6c105a7a4c0fedd83623a02d74fda66",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "004ff968_9edd5540",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1000461
      },
      "writtenOn": "2020-03-25T09:19:05Z",
      "side": 1,
      "message": "We are working on MCTP driver for AST2600 with simple interface (think read / write, single client, raw data). Not quite as bad as /dev/mem, but not ideal either ;)\nWe didn\u0027t plan to be portable across different HW on the kernel side - moving that to libmctp side for now (different bindings for different HW - trying to be mostly compatible, but no promises), mainly because of the future socket based approach, which would do just that (unified interface for userspace for anything MCTP). We would then just modify the driver to fit into that interface.",
      "parentUuid": "edd68db7_4d57f2f9",
      "revId": "588ec97fb6c105a7a4c0fedd83623a02d74fda66",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "354aaf52_fb898bc8",
        "filename": "pcie.c",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2020-03-25T06:06:20Z",
      "side": 1,
      "message": "Please include config.h before any other headers",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 10,
        "endChar": 6
      },
      "revId": "588ec97fb6c105a7a4c0fedd83623a02d74fda66",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c437decd_6d351b0f",
        "filename": "pcie.c",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1000460
      },
      "writtenOn": "2020-03-25T14:29:01Z",
      "side": 1,
      "message": "Ok",
      "parentUuid": "354aaf52_fb898bc8",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 10,
        "endChar": 6
      },
      "revId": "588ec97fb6c105a7a4c0fedd83623a02d74fda66",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "84a738d6_ea3ea3c8",
        "filename": "pcie.c",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1000460
      },
      "writtenOn": "2020-03-30T22:24:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c437decd_6d351b0f",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 10,
        "endChar": 6
      },
      "revId": "588ec97fb6c105a7a4c0fedd83623a02d74fda66",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "56422dc6_5f5dabcc",
        "filename": "pcie.c",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2020-03-25T06:06:20Z",
      "side": 1,
      "message": "We have this definition in serial.c and astlpc.c as well, can you please create a container_of.h and consolidate all the implementations there as a cleanup commit before this one?",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 29,
        "endChar": 6
      },
      "revId": "588ec97fb6c105a7a4c0fedd83623a02d74fda66",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d3a78a1f_3327aff1",
        "filename": "pcie.c",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1000460
      },
      "writtenOn": "2020-03-25T14:29:01Z",
      "side": 1,
      "message": "Ok",
      "parentUuid": "56422dc6_5f5dabcc",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 29,
        "endChar": 6
      },
      "revId": "588ec97fb6c105a7a4c0fedd83623a02d74fda66",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5094b5b2_b98c601b",
        "filename": "pcie.c",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1000460
      },
      "writtenOn": "2020-03-30T22:24:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d3a78a1f_3327aff1",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 29,
        "endChar": 6
      },
      "revId": "588ec97fb6c105a7a4c0fedd83623a02d74fda66",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ec0ff89a_1299b7aa",
        "filename": "pcie.c",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2020-03-25T06:06:20Z",
      "side": 1,
      "message": "Please adhere to the kernel coding style. I\u0027ll push a patch shortly adding a clang-format configuration to enforce this.",
      "range": {
        "startLine": 34,
        "startChar": 55,
        "endLine": 34,
        "endChar": 59
      },
      "revId": "588ec97fb6c105a7a4c0fedd83623a02d74fda66",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "69a16d2a_b8100945",
        "filename": "pcie.c",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 1000460
      },
      "writtenOn": "2020-03-25T14:29:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ec0ff89a_1299b7aa",
      "range": {
        "startLine": 34,
        "startChar": 55,
        "endLine": 34,
        "endChar": 59
      },
      "revId": "588ec97fb6c105a7a4c0fedd83623a02d74fda66",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "610d631e_01142c7c",
        "filename": "pcie.c",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 1000460
      },
      "writtenOn": "2020-03-30T22:24:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "69a16d2a_b8100945",
      "range": {
        "startLine": 34,
        "startChar": 55,
        "endLine": 34,
        "endChar": 59
      },
      "revId": "588ec97fb6c105a7a4c0fedd83623a02d74fda66",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c0179bd3_c99b59ac",
        "filename": "tests/test_pcie.c",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2020-03-25T06:06:20Z",
      "side": 1,
      "message": "You must enclose complex macro expressions in parentheses",
      "range": {
        "startLine": 16,
        "startChar": 23,
        "endLine": 16,
        "endChar": 36
      },
      "revId": "588ec97fb6c105a7a4c0fedd83623a02d74fda66",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ba5de1dd_1b522e18",
        "filename": "tests/test_pcie.c",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1000460
      },
      "writtenOn": "2020-03-25T14:29:01Z",
      "side": 1,
      "message": "Actually I do not need this anymore.",
      "parentUuid": "c0179bd3_c99b59ac",
      "range": {
        "startLine": 16,
        "startChar": 23,
        "endLine": 16,
        "endChar": 36
      },
      "revId": "588ec97fb6c105a7a4c0fedd83623a02d74fda66",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ec626275_26630efa",
        "filename": "tests/test_pcie.c",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1000460
      },
      "writtenOn": "2020-03-30T22:24:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ba5de1dd_1b522e18",
      "range": {
        "startLine": 16,
        "startChar": 23,
        "endLine": 16,
        "endChar": 36
      },
      "revId": "588ec97fb6c105a7a4c0fedd83623a02d74fda66",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e9f26c5b_94b57c2d",
        "filename": "tests/test_pcie.c",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2020-03-25T06:06:20Z",
      "side": 1,
      "message": "I forgot that I did this in test_astlpc.c. We should probably come up with a better solution. `#include \"pcie.c\"` isn\u0027t the worst idea.",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 35,
        "endChar": 2
      },
      "revId": "588ec97fb6c105a7a4c0fedd83623a02d74fda66",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "48852e4a_70e1b905",
        "filename": "tests/test_pcie.c",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1000460
      },
      "writtenOn": "2020-03-25T14:29:01Z",
      "side": 1,
      "message": "I\u0027ve been thinking about it and came up with an idea of private include file containing private data structures like bindings.",
      "parentUuid": "e9f26c5b_94b57c2d",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 35,
        "endChar": 2
      },
      "revId": "588ec97fb6c105a7a4c0fedd83623a02d74fda66",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "72e7e993_4d1e0c35",
        "filename": "tests/test_pcie.c",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1000460
      },
      "writtenOn": "2020-03-30T22:24:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "48852e4a_70e1b905",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 35,
        "endChar": 2
      },
      "revId": "588ec97fb6c105a7a4c0fedd83623a02d74fda66",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    }
  ]
}