{
  "comments": [
    {
      "key": {
        "uuid": "7f277024_c6dbf71b",
        "filename": "core.c",
        "patchSetId": 1
      },
      "lineNbr": 232,
      "author": {
        "id": 1000016
      },
      "writtenOn": "2021-06-17T03:13:14Z",
      "side": 1,
      "message": "Looks good, but see below...",
      "revId": "f0903aa64c6ea0400b25dadf25605f6e3b7e9396",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "58c8b8c8_10451efd",
        "filename": "core.c",
        "patchSetId": 1
      },
      "lineNbr": 242,
      "author": {
        "id": 1000016
      },
      "writtenOn": "2021-06-17T03:13:14Z",
      "side": 1,
      "message": "... we should also ensure that the new allocation size will fit len + ctx-\u003ebuf_size; possibly:\n\n    } else {\n        new_alloc_size \u003d MAX(ctx-\u003ebuf_alloc_size * 2, len + ctx-\u003ebuf_size);\n    }\n\nI\u0027m aware that this will be addressed by enforcing consistent fragment sizes, but I\u0027d rather do that explicitly here, rather than relying on that.",
      "revId": "f0903aa64c6ea0400b25dadf25605f6e3b7e9396",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}