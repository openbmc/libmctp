{
  "comments": [
    {
      "key": {
        "uuid": "8852c662_2446ead9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 20,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2021-05-24T23:10:15Z",
      "side": 1,
      "message": "IMO we don\u0027t need this, it\u0027s obvious what you\u0027ve done from the test cases themselves (which are great). If there weren\u0027t automated tests then it might be useful as a point of discussion.\n\nSo I\u0027d prefer we drop it in this case.",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 20,
        "endChar": 35
      },
      "revId": "d2e60a89f019665f1f880e78ad8d161e0f67dd80",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "65d93649_37581ac4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 20,
      "author": {
        "id": 1000410
      },
      "writtenOn": "2021-05-26T03:41:14Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "8852c662_2446ead9",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 20,
        "endChar": 35
      },
      "revId": "d2e60a89f019665f1f880e78ad8d161e0f67dd80",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "060335d0_b62f6ae1",
        "filename": "core.c",
        "patchSetId": 5
      },
      "lineNbr": 556,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2021-05-24T23:10:15Z",
      "side": 1,
      "message": "Is there any reason to use this calculation and not just the raw size of the transmission unit (i.e. mctp_pktbuf_size(pkt))?",
      "revId": "d2e60a89f019665f1f880e78ad8d161e0f67dd80",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "23916c6f_2480ffa2",
        "filename": "core.c",
        "patchSetId": 5
      },
      "lineNbr": 556,
      "author": {
        "id": 1000410
      },
      "writtenOn": "2021-05-26T03:41:14Z",
      "side": 1,
      "message": "The context buffers copy the data only from the actual mctp payload, thus keeping the fragment_size equal to first packet\u0027s mctp payload size.",
      "parentUuid": "060335d0_b62f6ae1",
      "revId": "d2e60a89f019665f1f880e78ad8d161e0f67dd80",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ea14df86_657fb2f2",
        "filename": "core.c",
        "patchSetId": 5
      },
      "lineNbr": 556,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2021-05-27T01:44:46Z",
      "side": 1,
      "message": "I don\u0027t follow what you mean. The MCTP packet header is always present, so it\u0027s just a constant addition to the packet length. The total packet size will still vary with the data payload length.",
      "parentUuid": "23916c6f_2480ffa2",
      "revId": "d2e60a89f019665f1f880e78ad8d161e0f67dd80",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4f027e4e_6578ec17",
        "filename": "core.c",
        "patchSetId": 5
      },
      "lineNbr": 556,
      "author": {
        "id": 1000016
      },
      "writtenOn": "2021-05-27T02:42:18Z",
      "side": 1,
      "message": "To put it another way: you\u0027re subtracting sizeof(struct mctp_hdr) here, *and* again in each of the checks. You could just drop the calculation and use mctp_pktbuf_size() directly.",
      "parentUuid": "ea14df86_657fb2f2",
      "revId": "d2e60a89f019665f1f880e78ad8d161e0f67dd80",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bec6f9b2_dca944d2",
        "filename": "core.c",
        "patchSetId": 5
      },
      "lineNbr": 556,
      "author": {
        "id": 1000410
      },
      "writtenOn": "2021-05-27T04:17:59Z",
      "side": 1,
      "message": "Agree that MCTP packet header is a constant addition. However, when I think about it, the *real* fragment size is mctp_pktbuf_size() - sizeof(struct mctp_hdr) isn\u0027t it? If one wants to build on top of the fragment size, suppose to add something like negotiating transmission size / enforce upper limit on fragment size, they would want to do it on the real payload size, no?",
      "parentUuid": "4f027e4e_6578ec17",
      "revId": "d2e60a89f019665f1f880e78ad8d161e0f67dd80",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f086b83_c9b48efe",
        "filename": "core.c",
        "patchSetId": 5
      },
      "lineNbr": 556,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2021-05-27T06:01:27Z",
      "side": 1,
      "message": "Right, but I think we can deal with that complexity later when it\u0027s needed rather than now when it\u0027s not.",
      "parentUuid": "bec6f9b2_dca944d2",
      "revId": "d2e60a89f019665f1f880e78ad8d161e0f67dd80",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1880ad52_b2f52d8b",
        "filename": "core.c",
        "patchSetId": 5
      },
      "lineNbr": 556,
      "author": {
        "id": 1000410
      },
      "writtenOn": "2021-05-27T17:45:08Z",
      "side": 1,
      "message": "Alright. Made the fragment size \u003d mctp_pktbuf_size(pkt)",
      "parentUuid": "6f086b83_c9b48efe",
      "revId": "d2e60a89f019665f1f880e78ad8d161e0f67dd80",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0bc815d0_eea388d0",
        "filename": "tests/test_core.c",
        "patchSetId": 5
      },
      "lineNbr": 111,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2021-05-24T23:10:15Z",
      "side": 1,
      "message": "I think it would be easier on the eyes to assign this to a variable.",
      "range": {
        "startLine": 109,
        "startChar": 8,
        "endLine": 111,
        "endChar": 14
      },
      "revId": "d2e60a89f019665f1f880e78ad8d161e0f67dd80",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d985179_c596d0aa",
        "filename": "tests/test_core.c",
        "patchSetId": 5
      },
      "lineNbr": 111,
      "author": {
        "id": 1000410
      },
      "writtenOn": "2021-05-26T03:41:14Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "0bc815d0_eea388d0",
      "range": {
        "startLine": 109,
        "startChar": 8,
        "endLine": 111,
        "endChar": 14
      },
      "revId": "d2e60a89f019665f1f880e78ad8d161e0f67dd80",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8fbff1dd_0eefa482",
        "filename": "tests/test_core.c",
        "patchSetId": 5
      },
      "lineNbr": 116,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2021-05-24T23:10:15Z",
      "side": 1,
      "message": "As above.\n\nIn fact, this is an issue in several test cases below as well. Please audit the file and fix all instances.",
      "range": {
        "startLine": 114,
        "startChar": 8,
        "endLine": 116,
        "endChar": 12
      },
      "revId": "d2e60a89f019665f1f880e78ad8d161e0f67dd80",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4220a252_48545e42",
        "filename": "tests/test_core.c",
        "patchSetId": 5
      },
      "lineNbr": 116,
      "author": {
        "id": 1000410
      },
      "writtenOn": "2021-05-26T08:53:10Z",
      "side": 1,
      "message": "Done. The mix of spaces and tabs appear to be result of clang formatting.",
      "parentUuid": "8fbff1dd_0eefa482",
      "range": {
        "startLine": 114,
        "startChar": 8,
        "endLine": 116,
        "endChar": 12
      },
      "revId": "d2e60a89f019665f1f880e78ad8d161e0f67dd80",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "876848bf_99af2db2",
        "filename": "tests/test_core.c",
        "patchSetId": 5
      },
      "lineNbr": 359,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2021-05-24T23:10:15Z",
      "side": 1,
      "message": "Is this necessary given we\u0027re tearing down the stack immediately below?\n\nOther test cases should not be relying on the state of the buffer, they should initialise it to their requirements explicitly.\n\nIt would be more obvious if this buffer were not global.",
      "revId": "d2e60a89f019665f1f880e78ad8d161e0f67dd80",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b1120a82_f0b72f53",
        "filename": "tests/test_core.c",
        "patchSetId": 5
      },
      "lineNbr": 359,
      "author": {
        "id": 1000410
      },
      "writtenOn": "2021-05-26T03:41:14Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "876848bf_99af2db2",
      "revId": "d2e60a89f019665f1f880e78ad8d161e0f67dd80",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "40ad130a_5b3d2d55",
        "filename": "tests/test_core.c",
        "patchSetId": 5
      },
      "lineNbr": 365,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2021-05-24T23:10:15Z",
      "side": 1,
      "message": "The test case should be named after the packet properties it provides, not after the behaviour of libmctp. Hopefully we no longer buffer overflow?",
      "revId": "d2e60a89f019665f1f880e78ad8d161e0f67dd80",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2d67814c_68dcc2ad",
        "filename": "tests/test_core.c",
        "patchSetId": 5
      },
      "lineNbr": 365,
      "author": {
        "id": 1000410
      },
      "writtenOn": "2021-05-26T03:41:14Z",
      "side": 1,
      "message": "We no longer overflow, since the fragment size check itself handles this case.",
      "parentUuid": "40ad130a_5b3d2d55",
      "revId": "d2e60a89f019665f1f880e78ad8d161e0f67dd80",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "99bde2f2_1ceba1b6",
        "filename": "tests/test_core.c",
        "patchSetId": 5
      },
      "lineNbr": 379,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2021-05-24T23:10:15Z",
      "side": 1,
      "message": "Mixed tabs and spaces here again, with some more below as well :)",
      "revId": "d2e60a89f019665f1f880e78ad8d161e0f67dd80",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5dd46e4d_6ae171c7",
        "filename": "tests/test_core.c",
        "patchSetId": 5
      },
      "lineNbr": 379,
      "author": {
        "id": 1000410
      },
      "writtenOn": "2021-05-26T03:41:14Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "99bde2f2_1ceba1b6",
      "revId": "d2e60a89f019665f1f880e78ad8d161e0f67dd80",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e52fc01c_804cf008",
        "filename": "tests/test_core.c",
        "patchSetId": 5
      },
      "lineNbr": 412,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2021-05-24T23:10:15Z",
      "side": 1,
      "message": "At some point we should move this to its own header. And ARRAY_SIZE(). And probably the TEST_CASE() stuff as well. Don\u0027t worry about it in this patch though.",
      "revId": "d2e60a89f019665f1f880e78ad8d161e0f67dd80",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ae36200_dc953ecd",
        "filename": "tests/test_core.c",
        "patchSetId": 5
      },
      "lineNbr": 412,
      "author": {
        "id": 1000410
      },
      "writtenOn": "2021-05-26T03:41:14Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "e52fc01c_804cf008",
      "revId": "d2e60a89f019665f1f880e78ad8d161e0f67dd80",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba65858b_45748baf",
        "filename": "tests/test_core.c",
        "patchSetId": 5
      },
      "lineNbr": 420,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2021-05-24T23:10:15Z",
      "side": 1,
      "message": "I\u0027d prefer this weren\u0027t a global and the test cases set up a buffer themselves. Let\u0027s try to be as explicit and self-contained as possible in each case.",
      "revId": "d2e60a89f019665f1f880e78ad8d161e0f67dd80",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5cf94256_e1947f8c",
        "filename": "tests/test_core.c",
        "patchSetId": 5
      },
      "lineNbr": 420,
      "author": {
        "id": 1000410
      },
      "writtenOn": "2021-05-26T03:41:14Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "ba65858b_45748baf",
      "revId": "d2e60a89f019665f1f880e78ad8d161e0f67dd80",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87de7bda_e6d54809",
        "filename": "tests/test_core.c",
        "patchSetId": 5
      },
      "lineNbr": 426,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2021-05-24T23:10:15Z",
      "side": 1,
      "message": "I expect we want a \\n here?",
      "range": {
        "startLine": 426,
        "startChar": 30,
        "endLine": 426,
        "endChar": 39
      },
      "revId": "d2e60a89f019665f1f880e78ad8d161e0f67dd80",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "69b00dcd_117ebb39",
        "filename": "tests/test_core.c",
        "patchSetId": 5
      },
      "lineNbr": 426,
      "author": {
        "id": 1000410
      },
      "writtenOn": "2021-05-26T03:41:14Z",
      "side": 1,
      "message": "Not really required here, the \\n after the end: %s makes sure that we have an empty line between the test cases.",
      "parentUuid": "87de7bda_e6d54809",
      "range": {
        "startLine": 426,
        "startChar": 30,
        "endLine": 426,
        "endChar": 39
      },
      "revId": "d2e60a89f019665f1f880e78ad8d161e0f67dd80",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}